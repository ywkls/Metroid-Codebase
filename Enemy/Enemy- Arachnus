//Section 51. Arachnus

const int ARACHNUS_LEFT_COMBO = 2984;//Enemy facing left.
const int ARACHNUS_RIGHT_COMBO = 2985;//Enemy facing right.
const int ARACHNUS_ROLL_LEFT_COMBO = 2986;//Enemy rolling left.
const int ARACHNUS_ROLL_RIGHT_COMBO = 2990;//Enemy rolling right.
const int ARACHNUS_WAVE_SPRITE = 14;//Sprite of wave attack.
const int ARACHNUS_FLAME_SPRITE = 39;//Sprite of flame attack.

ffc script Arachnus{
	void run(int enemyID){
		npc ghost = Ghost_InitAutoGhost(this, enemyID);
		int Direction = 0;
		int i;
		int Defenses[18];
		Ghost_StoreDefenses(ghost, Defenses);
		Ghost_Data = ARACHNUS_RIGHT_COMBO;
		Ghost_SetSize(this,ghost,4,3);
		Ghost_SetHitOffsets(ghost,1,6,3,3);
		bool MovingRight = true;
		bool MovingLeft = false;
		eweapon wave;
		eweapon flame;
		Ghost_Dir = DIR_RIGHT;
		int WaveTimer= Rand(15,45);
		bool Charge = false;
		Ghost_X = 64;
		Ghost_Y = 115;
		int Roll_Timer;
		while(true){
			if(!Charge){
				if(MovingRight && Ghost_X<128){
					Ghost_Move(DIR_RIGHT, ghost->Step/100, 0);
					Ghost_ForceDir(DIR_RIGHT);
					if(WaveTimer==5){
						for(i = 8;i<=Rand(16,32);i+=8){
							wave = FireBigEWeapon(ghost->Weapon, Ghost_X+64+i, Ghost_Y, DegtoRad(0), 100, ghost->WeaponDamage, ARACHNUS_WAVE_SPRITE, 0, EWF_UNBLOCKABLE,1,3);
							Gen_Explode_Waitframes(this,ghost,10);
						}
					}
					if(Link->X>=Ghost_X && Abs(Link->X-Ghost_X)<=32){
						for(i= 0;i<=64;i+=16){
							flame = FireEWeapon(EW_SCRIPT1, Ghost_X+64+i, Ghost_Y+32, DegtoRad(0), 0, ghost->WeaponDamage, ARACHNUS_FLAME_SPRITE, 0, EWF_UNBLOCKABLE);
							SetEWeaponLifespan(flame,EWL_TIMER, 60); 
							SetEWeaponDeathEffect(flame,EWD_VANISH, 0);
						}
					}
				}
				else if(MovingRight && Ghost_X>=128)
					Charge = true;
				else if(MovingLeft && Ghost_X>128){
					Ghost_Move(DIR_LEFT, ghost->Step/100, 0);
					Ghost_ForceDir(DIR_LEFT);
					if(WaveTimer==5){
						for(i = 8;i<=Rand(16,32);i+=8){
							wave = FireBigEWeapon(ghost->Weapon, Ghost_X-i, Ghost_Y, DegtoRad(180), 100, ghost->WeaponDamage, ARACHNUS_WAVE_SPRITE, 0, EWF_UNBLOCKABLE,1,3);
							wave->Flip = FLIP_H;
							Gen_Explode_Waitframes(this,ghost,10);
						}
					}
					if(Link->X<=Ghost_X && Abs(Link->X-Ghost_X)<=32){
						for(i= 0;i<=64;i+=16){
							flame = FireEWeapon(EW_SCRIPT1, Ghost_X-i, Ghost_Y+32, DegtoRad(180), 0, ghost->WeaponDamage, ARACHNUS_FLAME_SPRITE, 0, EWF_UNBLOCKABLE);
							SetEWeaponLifespan(flame,EWL_TIMER, 60); 
							SetEWeaponDeathEffect(flame,EWD_VANISH, 0);
						}
					}
				}
				else if(MovingLeft && Ghost_X<=128)
					Charge = true;
			}
			else{
				if(MovingRight && !MovingLeft){
					Ghost_SetAllDefenses(ghost, NPCDT_BLOCK);
					Ghost_Data = ARACHNUS_ROLL_RIGHT_COMBO;
					Ghost_SetSize(this,ghost,3,3);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = ARACHNUS_ROLL_RIGHT_COMBO+1;
					Ghost_SetSize(this,ghost,2,3);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = ARACHNUS_ROLL_RIGHT_COMBO+2;
					Ghost_SetSize(this,ghost,2,2);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = ARACHNUS_ROLL_RIGHT_COMBO+3;
					Ghost_SetSize(this,ghost,2,2);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = GH_INVISIBLE_COMBO;
					while(Ghost_X<192){
						Ghost_X++;
						Roll_Timer= (Roll_Timer+6)%360;
						//Draw combos corresponding to the spinner's appearance and rotate them.
						Screen->DrawCombo(2, this->X, this->Y, ARACHNUS_ROLL_RIGHT_COMBO+3, 2, 2, 
										  Ghost_CSet, -1,-1, this->X, this->Y, Roll_Timer, 1, -1, true, 128);		
						Gen_Explode_Waitframe(this,ghost);
					}
					Ghost_Data = ARACHNUS_ROLL_RIGHT_COMBO+3;
					Game->PlaySound(SHINE_SPARK_IMPACT_SFX);
					Ghost_X = 160;
					Ghost_Y = 115;
					Ghost_Data = ARACHNUS_LEFT_COMBO;
					Ghost_SetSize(this,ghost,4,3);
					Ghost_SetHitOffsets(ghost,1,6,3,3);
					Ghost_SetDefenses(ghost, Defenses);
					Ghost_Dir = DIR_LEFT;
					MovingRight = false;
					MovingLeft = true;
					Charge = false;
				}
				else if(!MovingRight && MovingLeft){
					Ghost_SetAllDefenses(ghost, NPCDT_BLOCK);
					Ghost_Data = ARACHNUS_ROLL_LEFT_COMBO;
					Ghost_SetSize(this,ghost,3,3);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = ARACHNUS_ROLL_LEFT_COMBO+1;
					Ghost_SetSize(this,ghost,2,3);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = ARACHNUS_ROLL_LEFT_COMBO+2;
					Ghost_SetSize(this,ghost,2,2);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = ARACHNUS_ROLL_LEFT_COMBO+3;
					Ghost_SetSize(this,ghost,2,2);
					Gen_Explode_Waitframes(this,ghost,15);
					Ghost_Data = GH_INVISIBLE_COMBO;
					while(Ghost_X>64){
						Ghost_X--;
						Roll_Timer= (Roll_Timer-6)%360;
						//Draw combos corresponding to the spinner's appearance and rotate them.
						Screen->DrawCombo(2, this->X, this->Y, ARACHNUS_ROLL_LEFT_COMBO+3, 2, 2, 
										  Ghost_CSet, -1,-1, this->X, this->Y, Roll_Timer, 1, -1, true, 128);		
						Gen_Explode_Waitframe(this,ghost);
					}
					Ghost_Data = ARACHNUS_ROLL_LEFT_COMBO+3;
					Game->PlaySound(SHINE_SPARK_IMPACT_SFX);
					Ghost_Y = 115;
					Ghost_Data = ARACHNUS_RIGHT_COMBO;
					Ghost_SetSize(this,ghost,4,3);
					Ghost_SetHitOffsets(ghost,1,6,3,3);
					Ghost_SetDefenses(ghost, Defenses);
					Ghost_Dir = DIR_RIGHT;
					MovingRight = true;
					MovingLeft = false;
					Charge = false;
				}
			}
			WaveTimer--;
			if(WaveTimer<=0)WaveTimer= Rand(15,45);
			Gen_Explode_Waitframe(this,ghost);
		}
	}
}
